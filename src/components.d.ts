/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface TextNode {
    'dataId': string;
    'serviceProvider': string;
  }
  interface TextNodeAttributes extends StencilHTMLAttributes {
    'dataId'?: string;
    'onCommit-content'?: (event: CustomEvent) => void;
    'serviceProvider'?: string;
  }

  interface UprtclCommit {
    'commitId': string;
  }
  interface UprtclCommitAttributes extends StencilHTMLAttributes {
    'commitId'?: string;
  }

  interface UprtclPerspective {
    'perspectiveId': string;
  }
  interface UprtclPerspectiveAttributes extends StencilHTMLAttributes {
    'onPerspectiveCreated'?: (event: CustomEvent) => void;
    'perspectiveId'?: string;
  }

  interface UprtclRoot {
    'createRootElement': () => void;
    'perspectiveId': string;
    'providerSelected': string;
  }
  interface UprtclRootAttributes extends StencilHTMLAttributes {
    'perspectiveId'?: string;
    'providerSelected'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'TextNode': Components.TextNode;
    'UprtclCommit': Components.UprtclCommit;
    'UprtclPerspective': Components.UprtclPerspective;
    'UprtclRoot': Components.UprtclRoot;
  }

  interface StencilIntrinsicElements {
    'text-node': Components.TextNodeAttributes;
    'uprtcl-commit': Components.UprtclCommitAttributes;
    'uprtcl-perspective': Components.UprtclPerspectiveAttributes;
    'uprtcl-root': Components.UprtclRootAttributes;
  }


  interface HTMLTextNodeElement extends Components.TextNode, HTMLStencilElement {}
  var HTMLTextNodeElement: {
    prototype: HTMLTextNodeElement;
    new (): HTMLTextNodeElement;
  };

  interface HTMLUprtclCommitElement extends Components.UprtclCommit, HTMLStencilElement {}
  var HTMLUprtclCommitElement: {
    prototype: HTMLUprtclCommitElement;
    new (): HTMLUprtclCommitElement;
  };

  interface HTMLUprtclPerspectiveElement extends Components.UprtclPerspective, HTMLStencilElement {}
  var HTMLUprtclPerspectiveElement: {
    prototype: HTMLUprtclPerspectiveElement;
    new (): HTMLUprtclPerspectiveElement;
  };

  interface HTMLUprtclRootElement extends Components.UprtclRoot, HTMLStencilElement {}
  var HTMLUprtclRootElement: {
    prototype: HTMLUprtclRootElement;
    new (): HTMLUprtclRootElement;
  };

  interface HTMLElementTagNameMap {
    'text-node': HTMLTextNodeElement
    'uprtcl-commit': HTMLUprtclCommitElement
    'uprtcl-perspective': HTMLUprtclPerspectiveElement
    'uprtcl-root': HTMLUprtclRootElement
  }

  interface ElementTagNameMap {
    'text-node': HTMLTextNodeElement;
    'uprtcl-commit': HTMLUprtclCommitElement;
    'uprtcl-perspective': HTMLUprtclPerspectiveElement;
    'uprtcl-root': HTMLUprtclRootElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
